---
export interface Props {
    name: string;
}

const { name } = Astro.props as Props;


const init_state = await fetch(import.meta.env.SERVER+'/api/'+name).then((response) => response.json());

const state = (init_state.state == "ON")?"ON":"OFF"
const notifyInit = (init_state.state == "Init")?"offline":""
---
<div class="container">
    <img src={`/media/${name}-${state}.png`}>
    <h1>{name+' '+notifyInit}</h1>
    <label class="switch">
        {(state == "ON") ?
        <input type="checkbox" checked>:
        <input type="checkbox">}
        <span class="slider"></span>
    </label>
</div>


<style>
    /* https://www.w3schools.com/howto/howto_css_switch.asp */
.container{
    display:flex;
    flex-direction: column;
}
h1{
    padding-left:10px;
}
img{
    max-height:12vh;
}

label{
    margin:10px;
    margin-top:0px;
}

.switch {
  position: relative;
  display: inline-block;
  width: 60px;
  height: 34px;
}

.switch input { 
  opacity: 0;
  width: 0;
  height: 0;
}

.slider {
  position: absolute;
  cursor: pointer;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: #ccc;
  -webkit-transition: .4s;
  transition: .4s;
  border-radius: 34px;
}

.slider:before {
  position: absolute;
  content: "";
  height: 26px;
  width: 26px;
  left: 4px;
  bottom: 4px;
  background-color: white;
  -webkit-transition: .4s;
  transition: .4s;
  border-radius: 50%;
}

input:checked + .slider {
  background-color: #2196F3;
}

input:focus + .slider {
  box-shadow: 0 0 1px #2196F3;
}

input:checked + .slider:before {
  -webkit-transform: translateX(26px);
  -ms-transform: translateX(26px);
  transform: translateX(26px);
}

</style>